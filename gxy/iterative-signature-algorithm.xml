<tool id="iterative-signature-algorithm" name="iterative-signature-algorithm">
     <description>metabomatching</description>
     <requirements>
       <container type="docker">container-registry.phenomenal-h2020.eu/phnmnl/iterative-signature-algorithm</container>
     </requirements>
     <command>
       <![CDATA[isa.wrapper.py -i /data/ts.csv -o /data/modules.csv]]>
     </command>
     <inputs>
         <param name="data" type="data" format="csv" label="Data Matrix" help="Data matrix in which to seek modules."/>
     </inputs>
     <outputs>
         <data name="modules" format="csv" from_work_dir="modules.csv" label="modules"/>
     </outputs>
     <help>
-----------
Description
-----------

A basic python3 implementation of the Iterative Signature Algorithm [ISA]. 

A more fully fledged R version is available here : https://bioconductor.org/packages/release/bioc/html/eisa.html

-----------
Input Files 
-----------
	
**Data Matrix**
	| The data matrix in which the iterative signature algorithm will seek modules. The first row and first column are expected to contain labels, and are therefore not passed to the algorithm
	|

**Test Files**
	| 

------------
Output Files
------------
	
**Modules**
	| A comma-separated values file containing the complete output of the iterative signature algorithm, to wit : 
	| * row 1 : module name
	| * row 2 : module robustness
	| * row 3 : row threshold at which module was found
	| * row 4 : column threshold at which module was found
	| * rows 5:(R+5) : row module scores 
	| * rows (R+6):(R+6+C) : column module scores 

	</help>
	<citations>
	 <citation type="doi">10.1103/PhysRevE.67.031902</citation> 
	</citations>
 </tool>
